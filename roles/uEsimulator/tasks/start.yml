---

- name: check if simluation is enabled else abort
  fail:
    msg: "Simulation is not enabled"
  when: srsran.simulation == false

- name: pull {{ srsran.docker.container.ue_image }} image
  community.docker.docker_image:
    name: "{{ srsran.docker.container.ue_image }}"
    source: pull
  when: inventory_hostname in groups['srsran_nodes']
  become: true

- name: remove /tmp/ue_zmq.conf
  file:
    path: "/tmp/ue_zmq.conf"
    state: absent
  when: inventory_hostname in groups['srsran_nodes']
  become: true

- name : copy ue_zmq config file to /tmp/ue_zmq.conf
  template:
    src: "{{ ROOT_DIR }}/{{ srsran.ue.conf_file }}"
    dest: /tmp/ue_zmq.conf
  when: inventory_hostname in groups['srsran_nodes']
  become: true

- name: create {{ srsran.docker.container.ue_image }} containers
  community.docker.docker_container:
    name: "rfsim5g-srsran-nr-ue"
    image: "{{ srsran.docker.container.ue_image }}"
    networks:
      - name: "{{ srsran.docker.network.name }}"
    volumes:
      - /tmp/ue_zmq.conf:/opt/ue_zmq.conf
    devices:
      - /dev/net/tun:/dev/net/tun
    privileged: true
    capabilities:
    - NET_ADMIN
    - NET_RAW
    state: started
    detach: true
  when: inventory_hostname in groups['srsran_nodes']
  become: true

- pause:
    seconds: 10

- name: add default route for UE
  shell: |
    docker exec rfsim5g-srsran-nr-ue ip netns exec ue1 ip route add default via {{ (core.upf.default_upf.ue_ip_pool.split('.'))[:3] | join('.') }}.{{ (core.upf.default_upf.ue_ip_pool.split('.')[3] | int) + 1 }} dev tun_srsue
  when: inventory_hostname in groups['srsran_nodes'][0]

- set_fact:
    ping_target: "{{ core.upf.core_subnet[:3] }}"
  when inventory_hostname in groups['srsran_nodes']

- name: run ping command to check if the UE is running and show output
  shell: |
    docker exec rfsim5g-srsran-nr-ue ip netns exec ue1 ping -c 5 {{ ping_target }}
  register: uEsimPingOutput
  when: inventory_hostname in groups['srsran_nodes'][0]

- debug:
    var: uEsimPingOutput.stdout_lines
  when: inventory_hostname in groups['srsran_nodes'][0]
