---

- name: "remove a static route on srsran host for {{ core.upf.access_subnet | regex_replace('[0-9]+/24', '0/24') }} via {{ core.amf.ip }}"
  shell: |
    ip route del {{ core.upf.access_subnet | regex_replace('[0-9]+/24', '0/24') }} via {{ core.amf.ip }}
  when: (inventory_hostname in groups['srsran_nodes'][0]) and (inventory_hostname not in groups['master_nodes']) and core.upf.multihop_gnb == false
  become: true
  ignore_errors: yes

- name: set net.ipv4.conf.all.arp_filter to 0
  ansible.posix.sysctl:
    name: net.ipv4.conf.all.arp_filter
    value: '0'
    sysctl_set: true
    reload: true
  when: (inventory_hostname in groups['srsran_nodes'][0]) and (inventory_hostname not in groups['master_nodes'])
  become: true

- name: set net.ipv4.conf.all.arp_ignore to 0
  ansible.posix.sysctl:
    name: net.ipv4.conf.all.arp_ignore
    value: '0'
    sysctl_set: true
    reload: true
  when: (inventory_hostname in groups['srsran_nodes'][0]) and (inventory_hostname not in groups['master_nodes'])
  become: true

- name: set net.ipv4.conf.all.arp_announce to 0
  ansible.posix.sysctl:
    name: net.ipv4.conf.all.arp_announce
    value: '0'
    sysctl_set: true
    reload: true
  when: (inventory_hostname in groups['srsran_nodes'][0]) and (inventory_hostname not in groups['master_nodes'])
  become: true

- name: set net.ipv4.conf.all.rp_filter to 2
  ansible.posix.sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '2'
    sysctl_set: true
    reload: true
  when: (inventory_hostname in groups['srsran_nodes'][0]) and (inventory_hostname not in groups['master_nodes'])
  become: true

- name: force systemd to reread configs
  systemd:
    daemon_reload: true
  when: inventory_hostname in groups['srsran_nodes'][0]
  become: true

- name: restart systemd-networkd
  systemd:
    name: systemd-networkd
    state: restarted
  when: inventory_hostname in groups['srsran_nodes'][0]
  become: true
